version: '3.8'

services:
  # Aplicación Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: csdt_app
    restart: unless-stopped
    environment:
      - APP_NAME="CONSEJO SOCIAL DE VEEDURÍA Y DESARROLLO TERRITORIAL"
      - APP_ENV=production
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-http://localhost:8000}
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/database/database.sqlite
      - LOG_CHANNEL=stack
      - CACHE_STORE=file
      - QUEUE_CONNECTION=database
      - SESSION_DRIVER=file
      - VITE_APP_NAME="CONSEJO SOCIAL DE VEEDURÍA Y DESARROLLO TERRITORIAL"
    volumes:
      - ./database:/var/www/database
      - ./storage:/var/www/storage
    ports:
      - "${APP_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - cache
      - queue
    networks:
      - csdt_network

  # Base de datos SQLite (archivo persistente)
  db:
    image: alpine:latest
    container_name: csdt_db
    restart: unless-stopped
    volumes:
      - ./database:/var/lib/sqlite
    command: ["sh", "-c", "chmod 755 /var/lib/sqlite && tail -f /dev/null"]
    networks:
      - csdt_network

  # Cache Redis
  cache:
    image: redis:7-alpine
    container_name: csdt_cache
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - cache_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - csdt_network

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: csdt_queue
    restart: unless-stopped
    command: ["php", "artisan", "queue:work", "--verbose", "--tries=3", "--timeout=90"]
    environment:
      - APP_ENV=production
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=sqlite
      - DB_DATABASE=/var/www/database/database.sqlite
      - QUEUE_CONNECTION=database
    volumes:
      - ./database:/var/www/database
      - ./storage:/var/www/storage
    depends_on:
      - app
    networks:
      - csdt_network

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: csdt_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./storage/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - csdt_network

volumes:
  cache_data:
    driver: local

networks:
  csdt_network:
    driver: bridge
